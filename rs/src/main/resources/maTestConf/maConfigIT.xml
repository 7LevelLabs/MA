<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:akka="http://akka.io/schema/akka"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:hz="http://www.hazelcast.com/schema/spring"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/context
             http://www.springframework.org/schema/context/spring-context.xsd
             http://www.springframework.org/schema/tx
             http://www.springframework.org/schema/tx/spring-tx.xsd
             http://www.springframework.org/schema/data/jpa
             http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
             http://www.springframework.org/schema/aop
             http://www.springframework.org/schema/aop/spring-aop.xsd
             http://www.springframework.org/schema/cache
             http://www.springframework.org/schema/cache/spring-cache.xsd
             http://www.hazelcast.com/schema/spring
             http://www.hazelcast.com/schema/spring/hazelcast-spring.xsd
             http://akka.io/schema/akka
             http://akka.io/akka-1.3.1.xsd
             ">

    <context:property-placeholder location="classpath:ma.test.it.properties"/>

    <context:annotation-config/>

    <aop:aspectj-autoproxy/>

    <jpa:repositories base-package="ua.ll7.slot7.ma.repository"/>

    <context:component-scan base-package="ua.ll7.slot7.ma.repository.custom"/>
    <context:component-scan base-package="ua.ll7.slot7.ma.service"/>
    <context:component-scan base-package="ua.ll7.slot7.ma.validator"/>

    <bean id="dataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${db.access.driverClassName}"/>
        <property name="jdbcUrl" value="${db.access.url}"/>
        <property name="user" value="${db.access.username}"/>
        <property name="password" value="${db.access.password}"/>
        <property name="maxStatements" value="100"/>
        <property name="maxPoolSize" value="50"/>
        <property name="minPoolSize" value="10"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory"
                  ref="entityManagerFactory"/>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
    </bean>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="ua.ll7.slot7.ma.model"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="true" />
                <property name="showSql" value="false"/>
                <property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect"/>
                <property name="database" value="MYSQL"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <value>
                hibernate.generate_statistics = false
                hibernate.hbm2ddl.auto = update
            </value>
        </property>
    </bean>

    <cache:annotation-driven cache-manager="cacheManager"/>

    <bean id="cacheManager" class="com.hazelcast.spring.cache.HazelcastCacheManager">
        <constructor-arg ref="hzClient"/>
    </bean>

    <!--client style-->
    <hz:client id="hzClient">
        <hz:group name="${cache.hz.group.name}" password="${cache.hz.group.password}"/>
        <hz:network connection-attempt-limit="3"
                    connection-attempt-period="3000"
                    connection-timeout="1000"
                    redo-operation="true"
                    smart-routing="true">
            <hz:member>${cache.hz.location.1}</hz:member>
        </hz:network>
    </hz:client>

    <akka:typed-actor
            id="serviceActor"
            interface="ua.ll7.slot7.ma.actor.IServiceActor"
            implementation="ua.ll7.slot7.ma.actor.impl.ServiceActorImpl"
            scope="prototype"
            timeout="1000"/>

    <akka:typed-actor
            id="blActor"
            interface="ua.ll7.slot7.ma.actor.IBLActor"
            implementation="ua.ll7.slot7.ma.actor.impl.BLActorImpl"
            scope="prototype"
            timeout="1000"/>

    <akka:dispatcher id="maDispatcher"
                     type="executor-based-event-driven"
                     name="maDispatcher">
        <akka:thread-pool queue="unbounded-linked-blocking-queue"
                          capacity="100"/>
    </akka:dispatcher>

</beans>